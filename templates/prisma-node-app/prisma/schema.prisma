// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(uuid())
  email           String            @unique
  password        String
  userPreferences UserPreferences[]
  files           Files[]
  prompts         Prompts[]
  workflow        Workflows[]
  analytics       Analytics?
}

model UserPreferences {
  id     String @id @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  key    String
  value  String
}

model WorkflowPreferences {
  id         String    @id @default(uuid())
  workflowId String    @unique
  workflow   Workflows @relation(fields: [workflowId], references: [id], onDelete: Cascade)
  key        String
  value      String
}

model Files {
  id       String   @id @default(uuid())
  userId   String   @unique
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  url      String
  fileName String
  type     fileType
}

model Prompts {
  id              String            @id @default(uuid())
  userId          String
  user            User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  prompt          String
  processedPrompt ProcessedPrompts?
}

model Analytics {
  id     String @id @default(uuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Workflows {
  id                  String                @id @default(uuid())
  userId              String                @unique
  user                User                  @relation(fields: [userId], references: [id], onDelete: Cascade)
  name                String
  description         String
  metadata            Json
  workflowPreferences WorkflowPreferences[]
  workflowLogs        WorkflowLogs[]
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model ProcessedPrompts {
  id              String  @id @default(uuid())
  promptId        String  @unique
  prompt          Prompts @relation(fields: [promptId], references: [id], onDelete: Cascade)
  processedPrompt String
}

model WorkflowLogs {
  id         String    @id @default(uuid())
  timestamp  DateTime
  workflowId String    @unique
  workflow   Workflows @relation(fields: [workflowId], references: [id], onDelete: Cascade)
  key        String
  value      String
}

enum fileType {
  PDF
  DOCX
}
